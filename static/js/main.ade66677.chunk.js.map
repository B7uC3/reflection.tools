{"version":3,"sources":["logo.svg","reflections.js","App.js","reportWebVitals.js","index.js"],"names":["sendersWeCareAbout","uniqueSenders","Object","values","filter","v","i","a","indexOf","colors","reduce","acc","sender","index","length","Reflections","useState","window","location","hash","replace","localStorage","getItem","address","setAddress","debouncedAddress","setDobouncedAddress","result","setResult","errors","setErrors","loading","setLoading","useEffect","timer","setTimeout","setItem","clearTimeout","match","fetch","method","headers","body","JSON","stringify","query","variables","then","res","json","incomeCurrencies","sentTotals","data","ethereum","transfers","transfer","date","currency","symbol","amount","includes","push","chartData","forEach","chart","labels","datasets","entries","label","backgroundColor","income","set","value","type","onChange","e","target","style","maxWidth","margin","map","width","height","options","scales","x","stacked","y","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ade66677.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect, Fragment } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst query = `\n  query ($address: String!) {\n    ethereum(network: bsc) {\n      transfers(receiver: {is: $address}) {\n        amount\n        currency {\n          name\n          symbol\n          tokenId\n          tokenType\n          decimals\n          address\n        }\n        date {\n          date\n        }\n        transaction {\n          hash\n          txFrom {\n            address\n          }\n        }\n        sender {\n          address\n          annotation\n          smartContract {\n            currency {\n              name\n            }\n            contractType\n          }\n        }\n        receiver {\n          address\n        }\n      }\n    }\n  }\n`;\n\nconst sendersWeCareAbout = {\n  \"0xfbab1d829e36efbd13642229eae2964004f38c41\": \"Evergrow\",\n  \"0x9aacfd4ff2a965779cff25e370b89b788222e6b9\": \"Crypter\",\n  \"0xfdac78ff52dead5a5f0b89b32a8ea66a01979f31\": \"Reflecto\",\n  \"0xdedf5fa8ec49255bc2c7bfadcd18be2c0d228f99\": \"Reflecto\",\n  \"0x7bda2f125b0e63bb332e1e6342be381e28efaeb6\": \"Reflecto\",\n  \"0xd93a7af8d6292030947b13dd2942a8d2baca649b\": \"Santa Coin\",\n  \"0x62c73478676848b96b729a3f2e25412735154df0\": \"Corsac\"\n};\n\nconst uniqueSenders = Object.values(sendersWeCareAbout).filter(\n  (v, i, a) => a.indexOf(v) === i\n);\n\nconst colors = uniqueSenders.reduce((acc, sender, index) => {\n  acc[sender] = `hsl(${(index / uniqueSenders.length) * 270} 100% 50%)`;\n  return acc;\n}, {});\n\nexport function Reflections() {\n  const [address, setAddress] = useState(() => {\n    return window.location.hash.replace('#', '') ?? localStorage.getItem(\"walletAddress\") ?? \"\";\n  });\n  const [debouncedAddress, setDobouncedAddress] = useState(address);\n  const [result, setResult] = useState(address);\n  const [errors, setErrors] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDobouncedAddress(address);\n    }, 500);\n    localStorage.setItem(\"walletAddress\", address);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [address]);\n\n  useEffect(() => {\n\n    window.location.hash = debouncedAddress;\n\n    if (!debouncedAddress.match(/^0x[A-Za-z0-9]{40}$/)) {\n      setErrors(\"Invalid wallet address.\");\n      setLoading(false);\n      setResult(null);\n      return;\n    }\n\n    setLoading(true);\n    setErrors(false);\n    fetch(\"https://graphql.bitquery.io/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query,\n        variables: JSON.stringify({\n          address: debouncedAddress\n        })\n      })\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setLoading(false);\n        if (res.errors) {\n          setErrors(res.errors);\n          setResult(null);\n          return;\n        }\n\n        const incomeCurrencies = [];\n\n        const sentTotals = res.data.ethereum.transfers.reduce(\n          (acc, transfer) => {\n            const sender = sendersWeCareAbout[transfer.sender.address];\n            if (!sender) return acc;\n            const date = transfer.date.date;\n            const currency = transfer.currency.symbol;\n            acc[date] = acc[date] || {};\n            acc[date][currency] = acc[date][currency] || {};\n            acc[date][currency][sender] = acc[date][currency][sender] || 0;\n            acc[date][currency][sender] += transfer.amount;\n            if (!incomeCurrencies.includes(currency))\n              incomeCurrencies.push(currency);\n            return acc;\n          },\n          {}\n        );\n\n        const chartData = {};\n\n        incomeCurrencies.forEach((currency) => {\n          const chart = (chartData[currency] = {\n            labels: [],\n            datasets: {}\n          });\n          Object.entries(sentTotals).forEach(([date, income]) => {\n            chart.labels.push(date);\n          });\n          uniqueSenders.forEach((sender) => {\n            chart.datasets[sender] = {\n              label: sender,\n              backgroundColor: colors[sender],\n              data: []\n            };\n          });\n        });\n\n        Object.entries(sentTotals).forEach(([date, income]) => {\n          incomeCurrencies.forEach((currency) => {\n            uniqueSenders.forEach((sender) => {\n              chartData[currency].datasets[sender].data.push(\n                income[currency]?.[sender] || 0\n              );\n            });\n          });\n        });\n\n        incomeCurrencies.forEach((currency) => {\n          const chart = chartData[currency];\n          chart.datasets = Object.values(chart.datasets).filter((set) => {\n            const sum = set.data.reduce((acc, value) => acc + value, 0);\n            return sum > 0;\n          });\n        });\n\n        setResult(chartData);\n      });\n  }, [debouncedAddress]);\n\n  return (\n    <>\n      <p>Enter your wallet address</p>\n      <input\n        type=\"text\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n      />\n      <div style={{ maxWidth: 600, margin: 'auto' }}>\n        {debouncedAddress === \"\" ? null : errors ? (\n          <pre>{JSON.stringify(errors, null, 4)}</pre>\n        ) : loading ? (\n          <p>Loading...</p>\n        ) : (\n          result && Object.entries(result).map(([currency, chart]) => (\n            <Fragment key={currency+debouncedAddress}>\n              <h1>{currency}</h1>\n              <Bar\n                data={chart}\n                width={100}\n                height={50}\n                options={{\n                  scales: {\n                    x: {\n                      stacked: true\n                    },\n                    y: {\n                      stacked: true\n                    }\n                  }\n                }}\n              />\n            </Fragment>\n          ))\n        )}\n      </div>\n    </>\n  );\n}\n","import logo from './logo.svg';\nimport { Reflections } from './reflections';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          Crypto Reflections\n        </h1>\n      </header>\n      <Reflections />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}